@using CuddlerDev.Pages.Shared.Cuddler.FormLabel
@using CuddlerDev.Utils
@using global::Cuddler.Pages.Shared.Cuddler.FormLabel
@using Kendo.Mvc.UI
@model global::CuddlerDev.Forms.FormField
@{
    //const string DateFormat = "MM/dd/yyyy";
    // const string DateFormat = "yyyy-MM-dd"; // 1999-10-22T00:00:00
    // string[] ParseFormats = { "yyyy-MM-ddTHH:mm:ss" };

    var dictionary = Model.HtmlAttributes as Dictionary<string, object?> ?? new Dictionary<string, object?>();
    if (Model.Tabindex != null)
    {
        dictionary.Add("tabindex", Model.Tabindex);
    }
    dictionary["style"] = "width:100%;";
    dictionary.Add("id", Model.WebId);
    dictionary.Add("placeholder", "YYYY-MM-DD");
    dictionary.AppendClass("eux-masked-date");
    if (Model.Value != null && Model.Value.StartsWith("#"))
    {
        dictionary.Add("data-template", Model.Value);
    }
    //var startValue = CalendarView.Month;
    //var hasAlternativeStartValue = dictionary.TryGetValue("start", out var alternativeStartValue);
    //if (hasAlternativeStartValue && alternativeStartValue != null)
    //{
    //    try
    //    {
    //        startValue = (CalendarView)alternativeStartValue;
    //    }
    //    catch (Exception)
    //    {
    //        startValue = CalendarView.Month;
    //    }
    //}
}
@if (!Model.HideLabel)
{
    <form-label description="@Model.Description"
                for-property="@Model.WebId"
                required="@Model.Required"
                text="@Model.Label" />
}

@(Html.Kendo()
      .MaskedTextBox()
      .Name(Model.Name)
      .Mask("0000-00-00")
      .Value(Model.Value)
      .HtmlAttributes(dictionary))

@*@(Html.Kendo()
      .DatePicker()
      .Name(Model.Name)
      .Value(Model.Value)
      .Start(startValue)
      .Format(DateFormat)
      .ParseFormats(ParseFormats)
      *@

@if (Model.ReadOnly)
{
    <script>
        $(function() {
            const input = $("#@(Model.WebId)").data("kendoMaskedTextBox");
            input.readonly(true);
        });
    </script>
}