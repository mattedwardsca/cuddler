@using CuddlerDev.Pages.Shared.Cuddler.FormLabel
@using CuddlerDev.Utils
@using Kendo.Mvc.UI
@model global::CuddlerDev.Forms.FormField
@{
    var dictionary = Model.HtmlAttributes as Dictionary<string, object?> ?? new Dictionary<string, object?>();
    if (Model.Tabindex != null)
    {
        dictionary.Add("tabindex", Model.Tabindex);
    }
    dictionary.Add("id", Model.WebId);
    if (Model.ReadOnly)
    {

        var hasClasses = dictionary.TryGetValue("class", out var classValue);
        classValue = hasClasses
            ? $"{classValue} readonly"
            : "readonly";
        dictionary["class"] = classValue;
    }

    var ddPod = WebIdUtil.GetWebId();
}

@if (!Model.HideLabel)
{
    <form-label description="@Model.Description"
                for-property="@Model.WebId"
                required="@Model.Required"
                text="@Model.Label" />
}
<div class="p-relative"
     id="@ddPod">
</div>
@(Html.Kendo()
      .DropDownList()
      .Name(Model.Name)
      .Value(Model.Value)
      .Template("#= data.Text #")
      .ValueTemplate("#= data.Text #")
      .HtmlAttributes(dictionary)
      .DataTextField(nameof(SelectListItem.Text))
      .DataValueField(nameof(SelectListItem.Value))
      .OptionLabel(Model.Placeholder)
      .Popup(p => p.AppendTo($"#{ddPod}"))
      .BindTo(Model.BindData))

@if (Model.ReadOnly)
{
    <script>
        $(function() {
            const dropdownlist = $("#@(Model.WebId)").data("kendoDropDownList");
            dropdownlist.readonly();
        });
    </script>
}