@using global::Cuddler.Pages.Shared.Cuddler.FormTooltip
@using global::Cuddler.Utils
@model global::Cuddler.Forms.FormField
@{
    if (Model.BindData == null)
    {
        throw new InvalidOperationException("RadioList requires the 'bind-data' attribute");
    }

    var dictionary = Model.HtmlAttributes as Dictionary<string, object?> ?? new Dictionary<string, object?>();
    if (Model.Tabindex != null)
    {
        dictionary.Add("tabindex", Model.Tabindex);
    }
    dictionary.Add("id", Model.WebId);
    var parentStyles = Model.Matrix
        ? "display: grid; grid-template-columns: 1fr 50px 50px; grid-gap: 10px;"
        : string.Empty;
    dictionary.AppendStyles(parentStyles);
}
<div class="eux-RadioList" @dictionary.ToHtmlAttributes()>
    @if (!Model.HideLabel)
    {
        <div>
            <label>@Html.Raw(Model.Label)</label>
            <form-tooltip title="@Model.Description" />
        </div>
    }
    @if (SelectListItemUtil.IsTextValue(Model.BindData))
    {
        var textValueList = Model.BindData;

        foreach (var item in textValueList)
        {
            var chcked = string.Equals(item.Value, Model.Value, StringComparison.InvariantCultureIgnoreCase);

            <div>
                <label style="margin-right: 10px;">
                    <input data-role="checkbox"
                           name="@Model.Name"
                           type="radio"
                           value="@item.Value"
                           @Model.ReadOnly.IsTrueHtml("disabled")
                           @chcked.IsTrueHtml("checked") />
                    @Html.Raw(item.Text)
                </label>
            </div>
        }
    }
    else
    {
        if (Model.BindData != null)
        {

            foreach (var item in Model.BindData)
            {
                var chcked = string.Equals(item.ToString(), Model.Value, StringComparison.InvariantCultureIgnoreCase);

                <div>
                    <label style="margin-right: 10px; text-align: center;">
                        <input data-role="checkbox"
                               name="@Model.Name"
                               type="radio"
                               value="@item"
                               @Model.ReadOnly.IsTrueHtml("disabled")
                               @chcked.IsTrueHtml("checked") />
                        @Html.Raw(item)
                    </label>
                </div>
            }
        }
    }

</div>