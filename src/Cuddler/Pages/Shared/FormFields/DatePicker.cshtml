@using global::Cuddler.Pages.Shared.Cuddler.FormLabel
@using Kendo.Mvc.UI
@model global::Cuddler.Forms.FormField
@{
    //const string DateFormat = "MM/dd/yyyy";
    const string DateFormat = "yyyy-MM-dd"; // 1999-10-22T00:00:00
    string[] ParseFormats = { "yyyy-MM-ddTHH:mm:ss" };

    var dictionary = Model.HtmlAttributes as Dictionary<string, object?> ?? new Dictionary<string, object?>();
    dictionary["style"] = "width:100%;";
    dictionary.Add("id", Model.WebId);
    var startValue = CalendarView.Month;
    var hasAlternativeStartValue = dictionary.TryGetValue("start", out var alternativeStartValue);
    if (hasAlternativeStartValue && alternativeStartValue != null)
    {
        try
        {
            startValue = (CalendarView)alternativeStartValue;
        }
        catch (Exception)
        {
            startValue = CalendarView.Month;
        }
    }
}
@if (!Model.HideLabel)
{
    <form-label description="@Model.Description"
                for-property="@Model.WebId"
                required="@Model.Required"
                text="@Model.Label" />
}

@(Html.Kendo()
      .DatePicker()
      .Name(Model.Name)
      .Value(Model.Value)
      .Start(startValue)
      .Format(DateFormat)
      .ParseFormats(ParseFormats)
      .HtmlAttributes(dictionary))
@if (Model.ReadOnly)
{
    <script>
        $(function() {
            const datepicker = $("#@(Model.WebId)").data("kendoDatePicker");
            datepicker.readonly(true);
        });
    </script>
}